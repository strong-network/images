name: Push images to dockerhub

on:
  workflow_dispatch:

jobs:
  deploy_images:
    environment: production
    env:
      REGISTRY_URL: strongnetwork # Public docker hub organization

    runs-on: ubuntu-latest-4-cores

    steps:
      - uses: actions/checkout@v3

      - name: Get image url
        run: |
          GIT_ROOT=$(git rev-parse --show-toplevel)
          VERSION=$(awk NF ${GIT_ROOT}/VERSION)
          echo GENERIC_IMAGE_URL=$REGISTRY_URL/cloud_editor_generic:$VERSION >>  $GITHUB_ENV
          echo JFROG_GENERIC_IMAGE_URL=$REGISTRY_URL/jfrog_generic:$VERSION >>  $GITHUB_ENV
          echo SYSBOX_GENERIC_IMAGE_URL=$REGISTRY_URL/sysbox_generic:$VERSION >> $GITHUB_ENV
          echo GUI_DEBIAN_KALI_IMAGE_URL=$REGISTRY_URL/gui_debian_kali_linux:$VERSION >> $GITHUB_ENV
          echo GUI_DEBIAN_IMAGE_URL=$REGISTRY_URL/gui_debian_linux:$VERSION >> $GITHUB_ENV
          echo GUI_UBUNTU_BASE_IMAGE_URL=$REGISTRY_URL/gui_ubuntu_base:$VERSION >> $GITHUB_ENV
          echo GUI_UBUNTU_ECLIPSE_IMAGE_URL=$REGISTRY_URL/gui_ubuntu_eclipse:$VERSION >> $GITHUB_ENV

          echo GENERIC_IMAGE_NAME=$(make get_generic_image) >> $GITHUB_ENV
          echo SYSBOX_GENERIC_IMAGE_NAME=$(make get_sysbox_generic_image) >> $GITHUB_ENV
          echo GUI_DEBIAN_KALI_IMAGE_NAME=$(make get_gui_kali_image) >> $GITHUB_ENV
          echo GUI_DEBIAN_IMAGE_NAME=$(make get_gui_debian_image) >> $GITHUB_ENV
          echo JFROG_GENERIC_IMAGE_NAME=$(make get_generic_jfrog_image) >> $GITHUB_ENV
          echo GUI_UBUNTU_BASE_IMAGE_NAME=$(make get_gui_ubuntu_base_image) >> $GITHUB_ENV
          echo GUI_UBUNTU_ECLIPSE_IMAGE_NAME=$(make get_gui_ubuntu_eclipse_image) >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build the base image
      - name: Build the base image
        run: make base_image

      # Build the generic cloud editor image
      - uses: ./.github/actions/push-image
        name: push generic image image
        with:
          image-name: ${{ env.GENERIC_IMAGE_NAME }}
          make-command: generic_image
          image-url: ${{ env.GENERIC_IMAGE_URL }}

      # Push GUI Debian Kali image
      - uses: ./.github/actions/push-image
        name: push gui debian kali image
        with:
          image-name: ${{ env.GUI_DEBIAN_KALI_IMAGE_NAME }}
          make-command: gui_debian_kali
          image-url: ${{ env.GUI_DEBIAN_KALI_IMAGE_URL }}

      # Push GUI Debian image
      - uses: ./.github/actions/push-image
        name: push gui debian image
        with:
          image-name: ${{ env.GUI_DEBIAN_IMAGE_NAME }}
          make-command: gui_debian
          image-url: ${{ env.GUI_DEBIAN_IMAGE_URL }}

      # Push GUI Ubuntu base image
      - uses: ./.github/actions/push-image
        name: push gui ubuntu base image
        with:
          image-name: ${{ env.GUI_UBUNTU_BASE_IMAGE_NAME }}
          make-command: gui_ubuntu_base_image
          image-url: ${{ env.GUI_UBUNTU_BASE_IMAGE_URL }}

      # Push GUI Ubuntu eclipse image
      - uses: ./.github/actions/push-image
        name: push gui ubuntu eclipse image
        with:
          image-name: ${{ env.GUI_UBUNTU_ECLIPSE_IMAGE_NAME }}
          make-command: gui_ubuntu_eclipse_image
          image-url: ${{ env.GUI_UBUNTU_ECLIPSE_IMAGE_URL }}

      # Push JFrog image
      - uses: ./.github/actions/push-image
        name: push generic image image JFROG
        with:
          image-name: ${{ env.JFROG_GENERIC_IMAGE_NAME }}
          make-command: generic_jfrog_image
          image-url: ${{ env.JFROG_GENERIC_IMAGE_URL }}

      # Push sysbox generic image
      - uses: ./.github/actions/push-image
        name: push sysbox image
        with:
          image-name: ${{ env.SYSBOX_GENERIC_IMAGE_NAME }}
          make-command: generic_sysbox_image
          image-url: ${{ env.SYSBOX_GENERIC_IMAGE_URL }}
