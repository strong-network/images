name: Run trivy scans

on:
  workflow_dispatch:

jobs:

  trivy-scan-base:

    runs-on: ubuntu-22.04

    steps:

      - uses: actions/checkout@v3

      - name: Make base image env
        run: |
          echo BASE_IMAGE=$(make get_base_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan base image
        with:
          image-name: ${{ env.BASE_IMAGE }}
          make-command: base_image

  trivy-scan-base-intellij:
    
    runs-on: ubuntu-22.04

    steps:

      - uses: actions/checkout@v3

      - name: Make base intellij image env
        run: |
          echo BASE_INTELLIJ_IMAGE=$(make get_base_jetbrains_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.BASE_INTELLIJ_IMAGE }}
          make-command: base_jetbrains_image


  scan-generic:

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make generic image env
        run: |
          echo GENERIC_IMAGE=$(make get_generic_image) >> $GITHUB_ENV
      - uses: ./.github/actions/scan-image

        name: scan image
        with:
          image-name: ${{ env.GENERIC_IMAGE }}
          make-command: generic_image

  scan-intellij-ultimate:

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make intellij image env
        run: |
          echo INTELLIJ_ULTIMATE_IMAGE=$(make get_intellij_ultimate_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.INTELLIJ_ULTIMATE_IMAGE }}
          make-command: intellij_ultimate

  scan-golang:

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make golang env
        run: |
          echo GOLANG_IMAGE=$(make get_golang_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.GOLANG_IMAGE }}
          make-command: golang_image

  scan-golang-1-17:

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make golang env
        run: |
          echo GOLANG_IMAGE_1.17=$(make get_golang_1.17_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.GOLANG_IMAGE_1.17 }}
          make-command: golang__1.17_image

  scan-goland:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make goland env
        run: |
          echo GOLAND_IMAGE=$(make get_goland_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.GOLAND_IMAGE }}
          make-command: goland
