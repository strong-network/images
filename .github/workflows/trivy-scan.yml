name: Run trivy scans

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

jobs:
  scan-base:
    runs-on: ubuntu-22.04
    outputs:
      # jira-issue-data2: ${{ steps.scan_image_step.outputs.jira-issue-data }}
      # jira-issue-data3: ${{ steps.output_output.outputs.jira-issue-data3 }}
      jira-issue-data: ${{ steps.output_output.outputs.jira-issue-data4 }}

    steps:
      - uses: actions/checkout@v3

      - name: Make base image env
        run: |
          echo BASE_IMAGE=$(make get_base_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        id: scan_image_step
        name: scan base image
        with:
          image-name: ${{ env.BASE_IMAGE }}
          make-command: base_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
      - name: Output the output
        id: output_output
        run: |
          {
            echo 'jira-issue-data4<<EOF'
            echo "${{ steps.scan_image_step.outputs.jira-issue-data && format('{0}', fromJSON(steps.scan_image_step.outputs.jira-issue-data).key) || '' }}"
            echo 'EOF'
          } >> $GITHUB_OUTPUT
          # echo "jira-issue-data3=${{steps.scan_image_step.outputs.jira-issue-data}}" >> $GITHUB_OUTPUT
      # - if: ${{ github.event_name == 'schedule' }}
      # - uses: act10ns/slack@v2
      #   env:
      #     # SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL}}
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
      #   with:
      #     status: ${{ job.status }}
      #     message: |
      #       Trivy scan on workspace image failed.
      #       ${{steps.scan_image_step.outputs.jira-issue-data}}
      #       A Jira ticket has been created: ${{ format('{0}/browse/{1}', secrets.JIRA_BASE_URL, fromJSON(steps.scan_image_step.outputs.jira-issue-data).key) }}

  scan-generic:
    runs-on: ubuntu-22.04
    outputs:
      jira-issue-data: ${{ steps.scan_image_step.outputs.jira-issue-data }}

    steps:
      - uses: actions/checkout@v3

      - name: Make generic image env
        run: |
          echo GENERIC_IMAGE=$(make get_generic_image) >> $GITHUB_ENV
      - uses: ./.github/actions/scan-image
        id: scan_image_step
        name: scan image
        with:
          image-name: ${{ env.GENERIC_IMAGE }}
          make-command: generic_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}

  scan-generic-jfrog:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make generic jfrog image env
        run: |
          echo GENERIC_JFROG_IMAGE=$(make get_generic_jfrog_image) >> $GITHUB_ENV
      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.GENERIC_JFROG_IMAGE }}
          make-command: generic_jfrog_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}

  scan-sysbox-generic:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make generic sysbox env
        run: |
          echo SYSBOX_GENERIC_IMAGE=$(make get_sysbox_generic_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.SYSBOX_GENERIC_IMAGE }}
          make-command: generic_sysbox_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}

  slack-summary:
    runs-on: ubuntu-latest
    needs: [scan-base, scan-generic, scan-generic-jfrog, scan-sysbox-generic]
    if: always()
    # if: always() && github.event_name == 'schedule'
    steps:
      - name: Send Workflow Summary
        uses: act10ns/slack@v2
        with:
          # ${{ needs.scan-base.result == 'success' && needs.scan-base.outputs.jira-issue-data != '' && format('A Jira ticket has been created: {0}/browse/{1}', $jira_url, needs.scan-base.outputs.jira-issue-data) }}

          # ${{ needs.scan-base.result == 'success' && needs.scan-base.outputs.jira-issue-data != '' && format('A Jira ticket has been created: {0}/browse/{1}', "https://strong-network-citrix.atlassian.net", needs.scan-base.outputs.jira-issue-data) }}

          # ${{ needs.scan-base.result == 'failure' && needs.scan-base.outputs.jira-issue-data != '' && format('A Jira ticket has been created: {0}/browse/{1}', "https://strong-network-citrix.atlassian.net", needs.scan-base.outputs.jira-issue-data) }}
          # webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
          status: failure # The overall status is failure if any job fails
          message: |
            Workflow Summary for `${{ github.workflow }}` on `${{ github.ref_name }}`:
            jira_url="https://strong-network-citrix.atlassian.net"
            - Base Image: ${{ needs.scan-base.result == 'success' && '✅ Passed' || '❌ Failed' }}
            ${{ needs.scan-base.result == 'success' && needs.scan-base.outputs.jira-issue-data != '' && format('A Jira ticket has been created: {0}/browse/{1}', 'https://strong-network-citrix.atlassian.net', needs.scan-base.outputs.jira-issue-data) || '' }}


            - Generic Image: ${{ needs.scan-generic.result == 'success' && '✅ Passed' || '❌ Failed' }}
            # ${{needs.scan-generic.outputs.jira-issue-data}}
