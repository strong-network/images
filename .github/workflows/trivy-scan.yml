name: Run trivy scans

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

jobs:
  scan-base:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Make base image env
        run: |
          echo BASE_IMAGE=$(make get_base_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        id: scan_image_step
        name: scan base image
        with:
          image-name: ${{ env.BASE_IMAGE }}
          make-command: base_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
      # - if: ${{ github.event_name == 'schedule' }}
      - uses: act10ns/slack@v2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          message: |
            Trivy scan on workspace image failed 
            A Jira ticket has been created: ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/fromJSON(steps.scan_step.outputs.jira-issue-data).id


  scan-generic:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make generic image env
        run: |
          echo GENERIC_IMAGE=$(make get_generic_image) >> $GITHUB_ENV
      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.GENERIC_IMAGE }}
          make-command: generic_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}

  scan-generic-jfrog:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make generic jfrog image env
        run: |
          echo GENERIC_JFROG_IMAGE=$(make get_generic_jfrog_image) >> $GITHUB_ENV
      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.GENERIC_JFROG_IMAGE }}
          make-command: generic_jfrog_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}

  scan-sysbox-generic:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Make generic sysbox env
        run: |
          echo SYSBOX_GENERIC_IMAGE=$(make get_sysbox_generic_image) >> $GITHUB_ENV

      - uses: ./.github/actions/scan-image
        name: scan image
        with:
          image-name: ${{ env.SYSBOX_GENERIC_IMAGE }}
          make-command: generic_sysbox_image
          upload-data: ${{ github.event_name == 'schedule' }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}